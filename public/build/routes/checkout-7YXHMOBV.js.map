{
  "version": 3,
  "sources": ["browser-route-module:/home/aleksep/remix/donat/app/routes/checkout.tsx?browser", "../../../app/routes/checkout.tsx", "../../../app/components/payments/index.ts", "../../../app/components/payments/payments.tsx", "../../../app/components/payments/invoice.tsx", "../../../app/service-api/invoice-create-order.generated.ts"],
  "sourcesContent": ["export { default } from \"/home/aleksep/remix/donat/app/routes/checkout.tsx\";", "import { useBasket } from \"../components/basket\";\nimport { Form } from \"remix\";\nimport { Payments } from \"../components/payments\";\nimport { useState } from \"react\";\nimport { CheckoutModelInput } from \"../service-api/types.generated\";\n\nexport default function Checkout() {\n  const [state, setState] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    phone: \"\",\n    street: \"\",\n    city: \"\",\n    postalCode: \"\",\n  });\n\n  const { firstName, lastName, phone, street, city, postalCode } = state;\n\n  const basket = useBasket();\n\n  function getURL(path: string) {\n    if (typeof window === \"undefined\") return \"\";\n    return `${location?.protocol}//${location?.host}${path}`;\n  }\n\n  const checkoutModel: CheckoutModelInput = {\n    basketModel: basket.basketModel,\n    customer: {\n      firstName,\n      lastName,\n      addresses: [\n        { type: \"billing\", phone },\n        {\n          type: \"delivery\",\n          street,\n          city,\n          postalCode,\n        },\n      ],\n    },\n    confirmationURL: getURL(`/confirmation/{crystallizeOrderId}`),\n    checkoutURL: getURL(`/checkout`),\n    termsURL: getURL(`/terms`),\n  };\n\n  return (\n    <div className=\"p-10 mx-auto bg-background1 w-auto md:w-128 lg:w-128 mt-20\">\n      <h1 className=\"text-text text-3xl font-bold mb-10 text-center\">\n        \u041E\u0444\u043E\u0440\u043C\u043B\u0435\u043D\u0438\u0435 \u0437\u0430\u043A\u0430\u0437\u0430\n      </h1>\n      <div className=\"mx-auto\">\n        <Form method=\"post\" className=\"flex flex-wrap gap-5\">\n          <input\n            type=\"text\"\n            name=\"\u0412\u0430\u0448\u0435 \u0438\u043C\u044F\"\n            placeholder=\"\u0412\u0430\u0448\u0435 \u0438\u043C\u044F\"\n            className=\"w-full\"\n            onChange={(e) => setState({ ...state, firstName: e.target.value })}\n          />\n          <input\n            type=\"tel\"\n            name=\"\u0422\u0435\u043B\u0435\u0444\u043E\u043D\"\n            placeholder=\"\u0422\u0435\u043B\u0435\u0444\u043E\u043D\"\n            className=\"w-full\"\n            onChange={(e) => setState({ ...state, phone: e.target.value })}\n          />\n           <input\n            type=\"text\"\n            name=\"Street\"\n            placeholder=\"Street\"\n            className=\"w-full\"\n            onChange={(e) => setState({ ...state, street: e.target.value })}\n          />\n           <input\n            type=\"text\"\n            name=\"\"\n            placeholder=\"\"\n            className=\"w-full\"\n            disabled=\"true\"\n            onChange={(e) => setState({ ...state, city: e.target.value })}\n          />\n        </Form>\n      </div>\n      <Payments\n        checkoutModel={checkoutModel}\n        onSuccess={() => console.log(\"success\")}\n        onError={() => {}}\n      />\n    </div>\n  );\n}\n", "export { Payments } from \"./payments\";\n", "import { useState } from \"react\";\n\nimport { Invoice } from \"./invoice\";\nimport { PaymentProps } from \"./types\";\n\nexport const Payments = (props: PaymentProps) => {\n  const [payment, setPayment] = useState(\"\");\n\n  return (\n    <>\n      {<Invoice {...props} />}\n    </>\n  );\n};\n", "import { FormEventHandler, useState } from \"react\";\nimport { serviceAPIClient } from \"../../clients\";\nimport { CheckoutModelInput } from \"../../service-api/types.generated\";\nimport {\n\tInoicevCreateOrderDocument,\n\tInoicevCreateOrderMutation,\n\tInoicevCreateOrderMutationVariables,\n} from \"../../service-api/invoice-create-order.generated\";\nimport { PaymentProps } from \"./types\";\nimport { Form, useSubmit } from \"remix\";\n\n\ninterface FormProps extends PaymentProps {\n\tcheckoutModel: CheckoutModelInput;\n}\n\nexport const InvoiceForm = ({\n\tcheckoutModel,\n\tonError = (error) => console.log(error),\n}: FormProps) => {\n\n\tconst [status, setStatus] = useState<\"idle\" | \"submitting\">(\"idle\");\n\n\tconst handleSubmit: FormEventHandler<HTMLFormElement> = async (event) => {\n\t\tevent.preventDefault();\n\n\t\tgo();\n\n\t\tasync function go() {\n\t\t\tsetStatus(\"submitting\");\n\n\t\t\t// Show a success message to your customer\n\t\t\t// There's a risk of the customer closing the window before callback\n\t\t\t// execution. Set up a webhook or plugin to listen for the\n\t\t\t// payment_intent.succeeded event that handles any business critical\n\t\t\t// post-payment actions.\n\t\t\tconst response = await serviceAPIClient.request<\n\t\t\t\tInoicevCreateOrderMutation,\n\t\t\t\tInoicevCreateOrderMutationVariables\n\t\t\t>(InoicevCreateOrderDocument, {\n\t\t\t\tcheckoutModel,\n\t\t\t});\n\n\t\t\tconst { success, orderId } =\n\t\t\t\tresponse.paymentProviders.invoice.createInvoice;\n\n\t\t\tif (success) {\n\t\t\t\twindow.location.replace(`/confirmation/${orderId}`);\n\t\t\t} else {\n\t\t\t\tsetStatus(\"idle\");\n\t\t\t\tonError(new Error(\"Unknown\"));\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<Form method=\"post\" onSubmit={handleSubmit}>\n\n\t\t\t<button\n\t\t\t\ttype=\"submit\"\n\t\t\t\tdisabled={status !== \"idle\"}\n\t\t\t\tclassName=\"w-full bg-text text-primary py-3 font-semibold mt-5\"\n\t\t\t>\n\t\t\t\t{status === \"idle\" ? \"\u041E\u0444\u043E\u0440\u043C\u0438\u0442\u044C \u0437\u0430\u043A\u0430\u0437\" : \"\u041F\u043E\u0434\u043E\u0436\u0434\u0438\u0442\u0435...\"}\n\t\t\t</button>\n\t\t</Form>\n\t);\n};\n\nexport const StripePayment = ({ checkoutModel, onSuccess }: PaymentProps) => {\n\n\treturn (\n\t\t<InvoiceForm\n\t\t\tcheckoutModel={checkoutModel}\n\t\t\tonSuccess={onSuccess}\n\t\t/>\n\t);\n};\n\nexport const Invoice = ({ checkoutModel, onSuccess }: PaymentProps) => {\n\treturn <StripePayment checkoutModel={checkoutModel} onSuccess={onSuccess} />;\n};\n", "import * as Types from '../../remix/service-api/types.generated';\n\nimport { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';\nexport type InoicevCreateOrderMutationVariables = Types.Exact<{\n  checkoutModel: Types.CheckoutModelInput;\n}>;\n\n\nexport type InoicevCreateOrderMutation = (\n  { __typename?: 'Mutation' }\n  & { paymentProviders: (\n    { __typename?: 'PaymentProvidersMutations' }\n    & { invoice: (\n      { __typename?: 'InvoiceMutation' }\n      & { createInvoice: (\n        { __typename?: 'CreateInvoiceMutation' }\n        & Pick<Types.CreateInvoiceMutation, 'success' | 'orderId'>\n      ) }\n    ) }\n  ) }\n);\n\n\nexport const InoicevCreateOrderDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"InoicevCreateOrder\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"checkoutModel\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CheckoutModelInput\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"paymentProviders\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"invoice\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createInvoice\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"checkoutModel\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"checkoutModel\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"success\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"orderId\"}}]}}]}}]}}]}}]} as unknown as DocumentNode<InoicevCreateOrderMutation, InoicevCreateOrderMutationVariables>;"],
  "mappings": ";;;;;;;;;;;;;;;AAAA;;;ACAA;;;ACAA;;;ACAA;AAAA,oBAAyB;;;ACAzB;AAAA,mBAA2C;;;ACA3C;AAuBO,IAAM,6BAA6B,EAAC,QAAO,YAAW,eAAc,CAAC,EAAC,QAAO,uBAAsB,aAAY,YAAW,QAAO,EAAC,QAAO,QAAO,SAAQ,wBAAsB,uBAAsB,CAAC,EAAC,QAAO,sBAAqB,YAAW,EAAC,QAAO,YAAW,QAAO,EAAC,QAAO,QAAO,SAAQ,qBAAkB,QAAO,EAAC,QAAO,eAAc,QAAO,EAAC,QAAO,aAAY,QAAO,EAAC,QAAO,QAAO,SAAQ,+BAA0B,gBAAe,EAAC,QAAO,gBAAe,cAAa,CAAC,EAAC,QAAO,SAAQ,QAAO,EAAC,QAAO,QAAO,SAAQ,sBAAoB,gBAAe,EAAC,QAAO,gBAAe,cAAa,CAAC,EAAC,QAAO,SAAQ,QAAO,EAAC,QAAO,QAAO,SAAQ,aAAW,gBAAe,EAAC,QAAO,gBAAe,cAAa,CAAC,EAAC,QAAO,SAAQ,QAAO,EAAC,QAAO,QAAO,SAAQ,mBAAiB,aAAY,CAAC,EAAC,QAAO,YAAW,QAAO,EAAC,QAAO,QAAO,SAAQ,mBAAiB,SAAQ,EAAC,QAAO,YAAW,QAAO,EAAC,QAAO,QAAO,SAAQ,wBAAoB,gBAAe,EAAC,QAAO,gBAAe,cAAa,CAAC,EAAC,QAAO,SAAQ,QAAO,EAAC,QAAO,QAAO,SAAQ,eAAY,EAAC,QAAO,SAAQ,QAAO,EAAC,QAAO,QAAO,SAAQ;;;ADP9iC,IAAM,cAAc,CAAC;AAAA,EAC3B;AAAA,EACA,UAAU,CAAC,UAAU,QAAQ,IAAI;AAAA,MACjB;AAEhB,QAAM,CAAC,QAAQ,aAAa,2BAAgC;AAE5D,QAAM,eAAkD,OAAO,UAAU;AACxE,UAAM;AAEN;AAEA,wBAAoB;AACnB,gBAAU;AAOV,YAAM,WAAW,MAAM,iBAAiB,QAGtC,4BAA4B;AAAA,QAC7B;AAAA;AAGD,YAAM,EAAE,SAAS,YAChB,SAAS,iBAAiB,QAAQ;AAEnC,UAAI,SAAS;AACZ,eAAO,SAAS,QAAQ,iBAAiB;AAAA,aACnC;AACN,kBAAU;AACV,gBAAQ,IAAI,MAAM;AAAA;AAAA;AAAA;AAKrB,SACC,oCAAC,MAAD;AAAA,IAAM,QAAO;AAAA,IAAO,UAAU;AAAA,KAE7B,oCAAC,UAAD;AAAA,IACC,MAAK;AAAA,IACL,UAAU,WAAW;AAAA,IACrB,WAAU;AAAA,KAET,WAAW,SAAS,oFAAmB;AAAA;AAMrC,IAAM,gBAAgB,CAAC,EAAE,eAAe,gBAA8B;AAE5E,SACC,oCAAC,aAAD;AAAA,IACC;AAAA,IACA;AAAA;AAAA;AAKI,IAAM,UAAU,CAAC,EAAE,eAAe,gBAA8B;AACtE,SAAO,oCAAC,eAAD;AAAA,IAAe;AAAA,IAA8B;AAAA;AAAA;;;AD3E9C,IAAM,WAAW,CAAC,UAAwB;AAC/C,QAAM,CAAC,SAAS,cAAc,4BAAS;AAEvC,SACE,0DACG,oCAAC,SAAD;AAAA,OAAa;AAAA;AAAA;;;AFPpB,oBAAyB;AAGV,oBAAoB;AACjC,QAAM,CAAC,OAAO,YAAY,4BAAS;AAAA,IACjC,WAAW;AAAA,IACX,UAAU;AAAA,IACV,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,YAAY;AAAA;AAGd,QAAM,EAAE,WAAW,UAAU,OAAO,QAAQ,MAAM,eAAe;AAEjE,QAAM,SAAS;AAEf,kBAAgB,MAAc;AAC5B,QAAI,OAAO,WAAW;AAAa,aAAO;AAC1C,WAAO,GAAG,qCAAU,aAAa,qCAAU,OAAO;AAAA;AAGpD,QAAM,gBAAoC;AAAA,IACxC,aAAa,OAAO;AAAA,IACpB,UAAU;AAAA,MACR;AAAA,MACA;AAAA,MACA,WAAW;AAAA,QACT,EAAE,MAAM,WAAW;AAAA,QACnB;AAAA,UACE,MAAM;AAAA,UACN;AAAA,UACA;AAAA,UACA;AAAA;AAAA;AAAA;AAAA,IAIN,iBAAiB,OAAO;AAAA,IACxB,aAAa,OAAO;AAAA,IACpB,UAAU,OAAO;AAAA;AAGnB,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAiD,sGAG/D,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAM,QAAO;AAAA,IAAO,WAAU;AAAA,KAC5B,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,aAAY;AAAA,IACZ,WAAU;AAAA,IACV,UAAU,CAAC,MAAM,SAAS,KAAK,OAAO,WAAW,EAAE,OAAO;AAAA,MAE5D,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,aAAY;AAAA,IACZ,WAAU;AAAA,IACV,UAAU,CAAC,MAAM,SAAS,KAAK,OAAO,OAAO,EAAE,OAAO;AAAA,MAEvD,oCAAC,SAAD;AAAA,IACC,MAAK;AAAA,IACL,MAAK;AAAA,IACL,aAAY;AAAA,IACZ,WAAU;AAAA,IACV,UAAU,CAAC,MAAM,SAAS,KAAK,OAAO,QAAQ,EAAE,OAAO;AAAA,MAExD,oCAAC,SAAD;AAAA,IACC,MAAK;AAAA,IACL,MAAK;AAAA,IACL,aAAY;AAAA,IACZ,WAAU;AAAA,IACV,UAAS;AAAA,IACT,UAAU,CAAC,MAAM,SAAS,KAAK,OAAO,MAAM,EAAE,OAAO;AAAA,QAI3D,oCAAC,UAAD;AAAA,IACE;AAAA,IACA,WAAW,MAAM,QAAQ,IAAI;AAAA,IAC7B,SAAS,MAAM;AAAA;AAAA;AAAA;",
  "names": []
}
